<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING/DTD BEAN//EN"
	"http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

	<!-- Use substitution values in this config. -->
	<bean id="configurationProperties" 
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>config/alfresco/avm-test.properties</value>
			</list>
		</property>
	</bean>

	<!-- Datasource -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass">
            <value>${db.driver}</value>
        </property>
        <property name="jdbcUrl">
            <value>${db.url}</value>
        </property>
        <property name="user">
            <value>${db.username}</value>
        </property>
        <property name="password">
            <value>${db.password}</value>
        </property>
        <property name="initialPoolSize">
            <value>${db.pool.initial}</value>
        </property>
        <property name="maxPoolSize" >
            <value>${db.pool.max}</value>
        </property>
        <property name="numHelperThreads">
            <value>1</value>
        </property>
        <property name="idleConnectionTestPeriod">
        	<value>60</value>
        </property>
    </bean>

	<!-- The SessionFactory for hibernate. -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
				<prop key="hibernate.connection.isolation">${hibernate.connection.isolation}</prop>
				<prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_versioned_data">${hibernate.jdbc.batch_versioned_data}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>org/alfresco/repo/avm/hibernate/AVM.hbm.xml</value>
			</list>
		</property>
	</bean>

	<bean id="issuerDAO" class="org.alfresco.repo.avm.hibernate.IssuerDAOHibernate">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>
	
	<bean id="nodeDAO" class="org.alfresco.repo.avm.hibernate.AVMNodeDAOHibernate">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>
	
	<bean id="repositoryDAO" class="org.alfresco.repo.avm.hibernate.RepositoryDAOHibernate">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>

	<bean id="versionRootDAO" class="org.alfresco.repo.avm.hibernate.VersionRootDAOHibernate">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>
	
	<bean id="fileContentDAO" class="org.alfresco.repo.avm.hibernate.FileContentDAOHibernate">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>
	
	<bean id="childEntryDAO" class="org.alfresco.repo.avm.hibernate.ChildEntryDAOHibernate">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>
	
	<bean id="historyLinkDAO" class="org.alfresco.repo.avm.hibernate.HistoryLinkDAOHibernate">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>

	<bean id="mergeLinkDAO" class="org.alfresco.repo.avm.hibernate.MergeLinkDAOHibernate">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>

	<bean id="deletedChildDAO" class="org.alfresco.repo.avm.hibernate.DeletedChildDAOHibernate">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>
	
	<bean id="newInRepositoryDAO" class="org.alfresco.repo.avm.hibernate.NewInRepositoryDAOHibernate">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>
	
	<bean id="avmContext" class="org.alfresco.repo.avm.AVMContext">
		<property name="issuerDAO">
			<ref bean="issuerDAO"/>
		</property>
		<property name="nodeDAO">
			<ref bean="nodeDAO"/>
		</property>
		<property name="repositoryDAO">
			<ref bean="repositoryDAO"/>
		</property>
		<property name="versionRootDAO">
			<ref bean="versionRootDAO"/>
		</property>
		<property name="fileContentDAO">
			<ref bean="fileContentDAO"/>
		</property>
		<property name="childEntryDAO">
			<ref bean="childEntryDAO"/>
		</property>
		<property name="historyLinkDAO">
			<ref bean="historyLinkDAO"/>
		</property>
		<property name="mergeLinkDAO">
			<ref bean="mergeLinkDAO"/>
		</property>
		<property name="deletedChildDAO">
			<ref bean="deletedChildDAO"/>
		</property>
		<property name="newInRepositoryDAO">
			<ref bean="newInRepositoryDAO"/>
		</property>
	</bean>
	
	<!-- The HibernateTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>

	<!-- A read only DefaultTransactionDefinition -->
	<bean id="readTransactionDefinition" 
		class="org.springframework.transaction.support.DefaultTransactionDefinition">
		<property name="propagationBehaviorName">
			<value>PROPAGATION_REQUIRES_NEW</value>
		</property>
		<property name="isolationLevelName">
			<value>ISOLATION_READ_COMMITTED</value>
		</property>
		<property name="readOnly">
			<value>true</value>
		</property>
	</bean>

	<!-- A write DefaultTransactionDefinition -->
	<bean id="writeTransactionDefinition" 
		class="org.springframework.transaction.support.DefaultTransactionDefinition">
		<property name="propagationBehaviorName">
			<value>PROPAGATION_REQUIRES_NEW</value>
		</property>
		<property name="isolationLevelName">
			<value>ISOLATION_READ_COMMITTED</value>
		</property>
		<property name="readOnly">
			<value>false</value>
		</property>
	</bean>

	<!-- The Hibernate Transaction wrapper. -->
	<bean id="retryingTransaction" class="org.alfresco.repo.avm.hibernate.HibernateTxn">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
		<property name="transactionManager">
			<ref bean="transactionManager"/>
		</property>
		<property name="readTransactionDefinition">
			<ref bean="readTransactionDefinition"/>
		</property>
		<property name="writeTransactionDefinition">
			<ref bean="writeTransactionDefinition"/>
		</property>
	</bean>

	<bean id="orphanReaper" class="org.alfresco.repo.avm.OrphanReaper"
		init-method="init" destroy-method="shutDown" depends-on="avmService">
		<property name="inactiveBaseSleep">
			<value>4000</value>
		</property>
		<property name="activeBaseSleep">
			<value>1000</value>
		</property>
		<property name="batchSize">
		    <value>50</value>
		</property>
		<property name="retryingTransaction">
			<ref bean="retryingTransaction"/>
		</property>
	</bean>
	
	<bean id="avmService" class="org.alfresco.repo.avm.AVMServiceImpl"
		init-method="init">
		<property name="storage">
			<value>build/test-results/storage</value>
		</property>
		<property name="initialize">
			<value>${avm.initialize}</value>
		</property>
		<property name="retryingTransaction">
			<ref bean="retryingTransaction"/>
		</property>
	</bean>
</beans>
